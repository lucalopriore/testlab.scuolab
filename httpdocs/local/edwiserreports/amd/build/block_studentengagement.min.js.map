{"version":3,"sources":["block_studentengagement.js"],"names":["define","$","Ajax","Templates","ApexCharts","Common","CFG","allGraphs","flatpickr","visitsonlms","timespentonlms","timespentoncourse","courseactivitystatus","charts","filter","date","student","course","lineChartDefault","series","chart","type","height","dropShadow","enabled","color","top","left","blur","opacity","toolbar","show","tools","download","reset","zoom","tooltip","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","onDatasetHover","highlightDataSeries","y","formatter","title","items","display","fixed","position","offsetX","offsetY","stroke","curve","grid","borderColor","markers","size","xaxis","categories","labels","hideOverlappingLabels","datetimeFormatter","year","month","day","hour","legend","floating","dataLabels","noData","text","M","util","get_string","barChartDefault","selection","zoomin","zoomout","pan","marker","plotOptions","bar","columnWidth","trim","tickPlacement","SELECTOR","PANEL","DATE","DATEMENU","DATEITEM","DATEPICKER","DATEPICKERINPUT","FORMFILTER","COURSE","STUDENT","GRAPH","GRAPHS","FILTERS","VISITSONLMS","TIMESPENTONLMS","TIMESPENTONCOURSE","COURSEACTIVITYSTATUS","PROMISE","GET_STUDENTS","courseid","call","methodname","args","GET_VISITSONLMS","ajax","url","requestUrl","requestType","dataType","requestDataType","data","action","secret","local_edwiserreports","JSON","stringify","GET_TIMESPENTONLMS","GET_TIMESPENTONCOURSE","GET_COURSEACTIVITYSTATUS","loadGraph","target","loader","exportFilter","Object","keys","map","key","join","renderGraph","graph","destroy","get","render","setTimeout","hide","find","concat","val","done","response","assign","name","visits","length","fail","exception","timespent","yaxis","timeFormatter","submissions","completions","initEvents","on","this","closest","removeClass","addClass","html","clear","parseInt","select2","students","js","replaceNode","forEach","mode","altInput","altFormat","dateFormat","maxDate","appendTo","onOpen","onClose","dateAlternate","next","includes","customDateSelected","init","invalidUser"],"mappings":"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","sourcesContent":["define([\n    'jquery',\n    'core/ajax',\n    'core/templates',\n    './chart/apexcharts',\n    './common',\n    './defaultconfig',\n    './select2'\n], function(\n    $,\n    Ajax,\n    Templates,\n    ApexCharts,\n    Common,\n    CFG\n) {\n    /**\n     * List of graphs in this block.\n     */\n    var allGraphs = ['visitsonlms', 'timespentonlms', 'timespentoncourse', 'courseactivitystatus'];\n\n    /**\n     * Flat picker elements.\n     */\n    var flatpickr = {\n        'visitsonlms': null,\n        'timespentonlms': null,\n        'timespentoncourse': null,\n        'courseactivitystatus': null\n    };\n\n    /**\n     * Charts list.\n     */\n    var charts = {\n        'visitsonlms': null,\n        'timespentonlms': null,\n        'timespentoncourse': null,\n        'courseactivitystatus': null\n    };\n\n    /**\n     * Filter for ajax.\n     */\n    var filter = {\n        'visitsonlms': {\n            date: 'weekly',\n            student: 0\n        },\n        'timespentonlms': {\n            date: 'weekly',\n            student: 0\n        },\n        'timespentoncourse': {\n            date: 'weekly',\n            course: 0,\n            student: 0\n        },\n        'courseactivitystatus': {\n            date: 'weekly',\n            course: 0,\n            student: 0\n        }\n    };\n\n    /**\n     * Line chart default config.\n     */\n    const lineChartDefault = {\n        series: [],\n        chart: {\n            type: 'area',\n            height: 350,\n            dropShadow: {\n                enabled: true,\n                color: '#000',\n                top: 18,\n                left: 7,\n                blur: 10,\n                opacity: 0.2\n            },\n            toolbar: {\n                show: false,\n                tools: {\n                    download: false,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            y: {\n                formatter: undefined,\n                title: {},\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        markers: {\n            size: 1\n        },\n        xaxis: {\n            categories: null,\n            type: 'datetime',\n            labels: {\n                hideOverlappingLabels: true,\n                datetimeFormatter: {\n                    year: 'yyyy',\n                    month: 'MMM \\'yy',\n                    day: 'dd MMM',\n                    hour: ''\n                }\n            },\n            tooltip: {\n                enabled: false\n            }\n        },\n        legend: {\n            position: 'top',\n            floating: true\n        },\n        dataLabels: {\n            enabled: false\n        },\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Bar chart default config.\n     */\n    const barChartDefault = {\n        series: [],\n        chart: {\n            type: 'bar',\n            height: 350,\n            toolbar: {\n                show: true,\n                tools: {\n                    download: false,\n                    selection: true,\n                    zoom: true,\n                    zoomin: true,\n                    zoomout: true,\n                    pan: true,\n                    reset: '<i class=\"fa fa-refresh\"></i>'\n                }\n            },\n        },\n        tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            intersect: false,\n            inverseOrder: false,\n            fillSeriesColor: false,\n            onDatasetHover: {\n                highlightDataSeries: false,\n            },\n            y: {\n                formatter: undefined,\n                title: {},\n            },\n            marker: {\n                show: true\n            },\n            items: {\n                display: 'flex'\n            },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n                offsetX: 0,\n                offsetY: 0,\n            },\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '50%'\n            }\n        },\n        grid: {\n            borderColor: '#e7e7e7'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        xaxis: {\n            categories: null,\n            labels: {\n                hideOverlappingLabels: true,\n                trim: true\n            },\n            tickPlacement: 'on'\n        },\n        noData: {\n            text: M.util.get_string('nographdata', 'local_edwiserreports')\n        }\n    };\n\n    /**\n     * Selectors list.\n     */\n    var SELECTOR = {\n        PANEL: '#studentengagementblock',\n        DATE: '.studentengagement-calendar',\n        DATEMENU: '.studentengagement-calendar + .dropdown-menu',\n        DATEITEM: '.studentengagement-calendar + .dropdown-menu .dropdown-item',\n        DATEPICKER: '.studentengagement-calendar + .dropdown-menu .dropdown-calendar',\n        DATEPICKERINPUT: '.studentengagement-calendar + .dropdown-menu .flatpickr',\n        FORMFILTER: '.download-links [name=\"filter\"]',\n        COURSE: '.course-select',\n        STUDENT: '.student-select',\n        GRAPH: '.graph',\n        GRAPHS: '.studentengagement-graphs',\n        FILTERS: '.filters',\n        VISITSONLMS: '.visitsonlms',\n        TIMESPENTONLMS: '.timespentonlms',\n        TIMESPENTONCOURSE: '.timespentoncourse',\n        COURSEACTIVITYSTATUS: '.courseactivitystatus'\n    };\n\n    /**\n     * All promises.\n     */\n    var PROMISE = {\n        /**\n         * Get students using course id.\n         *\n         * @param {Integer} courseid Course id\n         * @returns {PROMISE}\n         */\n        GET_STUDENTS: function(courseid) {\n            return Ajax.call([{\n                methodname: 'local_edwiserreports_get_students_of_course',\n                args: {\n                    courseid: courseid\n                }\n            }], false)[0];\n        },\n        /**\n         * Get visits on lms using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_VISITSONLMS: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_studentengagement_visitsonlms_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        },\n        /**\n         * Get timespent on lms using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_TIMESPENTONLMS: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_studentengagement_timespentonlms_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        },\n        /**\n         * Get timespent on course using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_TIMESPENTONCOURSE: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_studentengagement_timespentoncourse_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        },\n        /**\n         * Get timespent on course using filters.\n         * @param {Object} filter Filter data\n         * @returns {PROMISE}\n         */\n        GET_COURSEACTIVITYSTATUS: function(filter) {\n            return $.ajax({\n                url: CFG.requestUrl,\n                type: CFG.requestType,\n                dataType: CFG.requestDataType,\n                data: {\n                    action: 'get_studentengagement_courseactivitystatus_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        filter: filter\n                    })\n                },\n            });\n        }\n    }\n\n    /**\n     * Load graph\n     * @param {String} target Graph name\n     */\n    function loadGraph(target) {\n        Common.loader.show('#studentengagementblock .' + target);\n\n        // Set export filter to download link.\n        let exportFilter = Object.keys(filter[target]).map(key => filter[target][key]).join(\"-\") + '-' + target;\n        $(SELECTOR.PANEL).find(`.${target}`).find(SELECTOR.FORMFILTER).val(exportFilter);\n\n        /**\n         * Render graph.\n         * @param {DOM} graph Graph element\n         * @param {Object} data Graph data\n         */\n        function renderGraph(graph, data) {\n            if (charts[target] !== null) {\n                charts[target].destroy();\n            }\n            charts[target] = new ApexCharts(graph.get(0), data);\n            charts[target].render();\n            setTimeout(function() {\n                Common.loader.hide('#studentengagementblock .' + target);\n            }, 1000);\n        }\n\n        switch (target) {\n            case 'visitsonlms':\n                PROMISE.GET_VISITSONLMS(filter[target])\n                    .done(function(response) {\n                        let data = Object.assign({}, lineChartDefault);\n                        data.series = [{\n                            name: M.util.get_string('visitsonlms', 'local_edwiserreports'),\n                            data: response.visits,\n                        }];\n                        data.xaxis.categories = response.labels;\n                        data.chart.toolbar.show = response.labels.length > 30;\n                        data.chart.zoom.enabled = response.labels.length > 30;\n                        data.tooltip.y.title.formatter = () => {\n                            return M.util.get_string('visits', 'local_edwiserreports') + ': ';\n                        }\n                        renderGraph($(SELECTOR.PANEL).find(SELECTOR.VISITSONLMS).find(SELECTOR.GRAPH), data)\n                    }).fail(function(exception) {\n                        Common.loader.hide('#studentengagementblock .' + target);\n                    });\n                break;\n            case 'timespentonlms':\n                PROMISE.GET_TIMESPENTONLMS(filter[target])\n                    .done(function(response) {\n                        let data = Object.assign({}, lineChartDefault);\n                        data.series = [{\n                            name: M.util.get_string('timespentonlms', 'local_edwiserreports'),\n                            data: response.timespent,\n                        }];\n                        data.yaxis = {\n                            labels: {\n                                formatter: Common.timeFormatter\n                            }\n                        };\n                        data.xaxis.categories = response.labels;\n                        data.chart.toolbar.show = response.labels.length > 30;\n                        data.chart.zoom.enabled = response.labels.length > 30;\n                        data.tooltip.y.title.formatter = () => {\n                            return M.util.get_string('time', 'local_edwiserreports') + ': ';\n                        }\n                        renderGraph($(SELECTOR.PANEL).find(SELECTOR.TIMESPENTONLMS).find(SELECTOR.GRAPH), data);\n                    }).fail(function(exception) {\n                        Common.loader.hide('#studentengagementblock .' + target);\n                    });\n                break;\n            case 'timespentoncourse':\n                PROMISE.GET_TIMESPENTONCOURSE(filter[target])\n                    .done(function(response) {\n                        let data;\n                        if (filter[target].course == 0) {\n                            data = Object.assign({}, barChartDefault);\n                        } else {\n                            data = Object.assign({}, lineChartDefault);\n                        }\n                        data.series = [{\n                            name: M.util.get_string('timespentoncourse', 'local_edwiserreports'),\n                            data: response.timespent,\n                        }];\n                        data.xaxis.categories = response.labels;\n                        data.yaxis = {\n                            labels: {\n                                formatter: Common.timeFormatter\n                            }\n                        };\n                        data.chart.toolbar.show = response.labels.length > 30;\n                        data.chart.zoom = {\n                            enabled: response.labels.length > 30\n                        };\n                        data.tooltip.y.title.formatter = () => {\n                            return M.util.get_string('time', 'local_edwiserreports') + ': ';\n                        }\n                        renderGraph($(SELECTOR.PANEL).find(SELECTOR.TIMESPENTONCOURSE).find(SELECTOR.GRAPH), data);\n                    }).fail(function(exception) {\n                        Common.loader.hide('#studentengagementblock .' + target);\n                    });\n                break;\n            case 'courseactivitystatus':\n                PROMISE.GET_COURSEACTIVITYSTATUS(filter[target])\n                    .done(function(response) {\n                        let data = Object.assign({}, lineChartDefault);\n                        data.series = [{\n                            name: M.util.get_string('courseactivitystatus-submissions', 'local_edwiserreports'),\n                            data: response.submissions,\n                        }, {\n                            name: M.util.get_string('courseactivitystatus-completions', 'local_edwiserreports'),\n                            data: response.completions,\n                        }];\n                        data.xaxis.categories = response.labels;\n                        data.chart.toolbar.show = response.labels.length > 30;\n                        data.chart.zoom.enabled = response.labels.length > 30;\n                        data.tooltip.y.title.formatter = null;\n                        renderGraph($(SELECTOR.PANEL).find(SELECTOR.COURSEACTIVITYSTATUS).find(SELECTOR.GRAPH), data);\n                    }).fail(function(exception) {\n                        Common.loader.hide('#studentengagementblock .' + target);\n                    });\n                break;\n            default:\n                Common.loader.hide('#studentengagementblock .' + target);\n                break;\n        }\n    }\n\n    /**\n     * After Select Custom date get active users details.\n     * @param {String} target Targeted graph\n     */\n    function customDateSelected(target) {\n        let date = $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEPICKERINPUT).val(); // Y-m-d format\n        let dateAlternate = $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEPICKERINPUT).next().val(); // d/m/Y format\n\n        /* If correct date is not selected then return false */\n        if (!dateAlternate.includes(\"to\")) {\n            flatpickr[target].clear();\n            return;\n        }\n\n        // Set active class to custom date selector item.\n        $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEITEM).removeClass('active');\n        $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEITEM + '.custom').addClass('active');\n\n        // Show custom date to dropdown button.\n        $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATE).html(dateAlternate);\n        filter[target].date = date;\n        loadGraph(target);\n    }\n\n    /**\n     * Initialize event listeners.\n     */\n    function initEvents() {\n\n        /* Date selector listener */\n        $('body').on('click', SELECTOR.DATEITEM + \":not(.custom)\", function() {\n            let target = $(this).closest(SELECTOR.FILTERS).data('id');\n            // Set custom selected item as active.\n            $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEITEM).removeClass('active');\n            $(this).addClass('active');\n\n            // Show selected item on dropdown button.\n            $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATE).html($(this).text());\n\n            // Clear custom date.\n            flatpickr[target].clear();\n\n            // Set date.\n            filter[target].date = $(this).data('value');\n\n            // Load graph data.\n            loadGraph(target);\n        });\n\n        // Course selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.COURSE}`, function() {\n            let target = $(this).closest(SELECTOR.FILTERS).data('id');\n            let courseid = parseInt($(this).val());\n            filter[target].course = courseid;\n            filter[target].student = 0;\n\n            PROMISE.GET_STUDENTS(courseid)\n                .done(function(response) {\n                    // Destroy student selector select2 instance.\n                    $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.STUDENT).select2('destroy');\n                    Templates.render('local_edwiserreports/studentengagement/students_filter', { 'students': response })\n                        .done(function(html, js) {\n                            Templates.replaceNode($(SELECTOR.PANEL).find('.' + target).find(SELECTOR.STUDENT), html, js);\n\n                            // Reinitialize student selector select2 instance.\n                            $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.STUDENT).select2();\n                        });\n                });\n\n            // Load graph data.\n            loadGraph(target);\n        });\n\n        // Student selector listener.\n        $('body').on('change', `${SELECTOR.PANEL} ${SELECTOR.STUDENT}`, function() {\n            let target = $(this).closest(SELECTOR.FILTERS).data('id');\n            filter[target].student = parseInt($(this).val());\n\n            // Load graph data.\n            loadGraph(target);\n        });\n\n\n        // Initialize date selector.\n        allGraphs.forEach(function(target) {\n            flatpickr[target] = $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEPICKERINPUT).flatpickr({\n                mode: 'range',\n                altInput: true,\n                altFormat: \"d/m/Y\",\n                dateFormat: \"Y-m-d\",\n                maxDate: \"today\",\n                appendTo: $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEPICKER).get(0),\n                onOpen: function() {\n                    $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEMENU).addClass('withcalendar');\n                },\n                onClose: function() {\n                    $(SELECTOR.PANEL).find('.' + target).find(SELECTOR.DATEMENU).removeClass('withcalendar');\n                    customDateSelected(target);\n                }\n            });\n        });\n    }\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        if ($(SELECTOR.PANEL).length == 0) {\n            return;\n        }\n        $(SELECTOR.PANEL).find('.singleselect').select2();\n        initEvents();\n        allGraphs.forEach(function(target) {\n            loadGraph(target);\n        });\n    }\n    return {\n        init: init\n    };\n});\n"],"file":"block_studentengagement.min.js"}